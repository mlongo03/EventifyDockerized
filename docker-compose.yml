version: '3.8'

services:
  admin:
    container_name: adminer
    image: adminer
    networks:
      - eventify
    restart: always
    depends_on:
      - postgres
    ports:
      - 8080:8080

  angular-nginx:
    container_name: angular-nginx
    networks:
      - eventify
    depends_on:
      - springboot
    build:
      context: angular-nginx
      dockerfile: Dockerfile
      args:
        SERVER_IP: $SERVER_IP
        SERVER_PORT: $SERVER_PORT
        SERVER_PROT: $SERVER_PROT
        CERT_FILE: $CERT_FILE
        KEY_FILE: $KEY_FILE
        CERTS_: $CERTS_
        KEYS_: $KEYS_
    env_file: .env
    volumes:
      - adminer-vol:/var/www/adminer
    ports:
      - "$CLIENT_IP:$CLIENT_PORT:$CLIENT_PORT"
    restart: on-failure

  postgres:
    image: postgres:alpine
    container_name: postgres
    networks:
      - eventify
    env_file: .env
    volumes:
      - postgres-vol:/var/lib/postgresql/data
    restart: unless-stopped
    expose:
      - $POSTGRES_PORT

  springboot:
    container_name: springboot
    networks:
      - eventify
    depends_on:
      - postgres
    build:
      context: springboot
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "$SERVER_IP:$SERVER_PORT:$SERVER_PORT"
    restart: on-failure

volumes:
  postgres-vol:
  adminer-vol:

networks:
  eventify:
    driver: bridge
